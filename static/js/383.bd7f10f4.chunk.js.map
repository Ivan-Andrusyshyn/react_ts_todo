{"version":3,"file":"static/js/383.bd7f10f4.chunk.js","mappings":"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","sources":["Pages/Home/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport * as S from \"./styles\";\n\nimport TaskCard from \"../../Components/TaskCard\";\nimport AddTask from \"../../Components/AddTask\";\nimport { TaskListContext } from \"../../Contexts/taskListContext\";\nimport { TaskListType } from \"../../Contexts/typesContext/taskType\";\nimport FilterTag from \"../../Components/FilterTag\";\nimport Filter from \"../../Img/filter.svg\";\nimport { DeleteContext } from \"../../Contexts/delete_edit_Context\";\nimport { DeleteType } from \"../../Contexts/typesContext/delete_edit_Type\";\nimport DeleteModal from \"../../Components/DeleteModal\";\nimport AddModal from \"../../Components/AddModal\";\nimport { AddContext } from \"../../Contexts/addContext\";\nimport { AddType } from \"../../Contexts/typesContext/addType\";\nimport AuthContext from \"../../Contexts/authContext\";\nimport { faBars, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { AuthType } from \"../../Contexts/typesContext/authType\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SideBar from \"./SideBar\";\nimport EditModal from \"../../Components/EditModal/EditModal\";\nimport { CategorieContextType } from \"../../Contexts/typesContext/categoriesType\";\nimport { CategoriesContext } from \"../../Contexts/categoriesContext\";\nimport { useNavigate } from \"react-router-dom\";\nconst Home: React.FC = () => {\n  const { taskList, doneTasks, notDoneTasks } = useContext(\n    TaskListContext\n  ) as TaskListType;\n  const { userData, isLoading } = useContext(AuthContext) as AuthType;\n  const { categList } = useContext(CategoriesContext) as CategorieContextType;\n  const navigate = useNavigate();\n\n  const { showDelete, showEdit } = useContext(DeleteContext) as DeleteType;\n  const { showAdd } = useContext(AddContext) as AddType;\n  const [listToDisplay, setListToDisplay] = useState(0);\n  const listOfLists = [taskList, doneTasks, notDoneTasks];\n  const [allActive, setAllActive] = useState(true);\n  const [doneActive, setDoneActive] = useState(false);\n  const [notDoneActive, setNotDoneActive] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const toggleSidebar = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const clickedElement = e.target as HTMLElement;\n    if (clickedElement.id === \"backdrop\") {\n      setIsSidebarOpen(!isSidebarOpen);\n    }\n  };\n  useEffect(() => {\n    if (categList) {\n      const nameNav = categList[0]?.name;\n      if (nameNav) {\n        navigate(\"/categorie/\" + nameNav);\n      }\n    }\n  }, []);\n  const isTablet = useMediaQuery({ minWidth: 320, maxWidth: 920 });\n  function handleAll() {\n    setListToDisplay(0);\n    setAllActive(true);\n    setDoneActive(false);\n    setNotDoneActive(false);\n  }\n\n  function handleDone() {\n    setListToDisplay(1);\n    setAllActive(false);\n    setDoneActive(true);\n    setNotDoneActive(false);\n  }\n  function handleNotDone() {\n    setListToDisplay(2);\n    setAllActive(false);\n    setDoneActive(false);\n    setNotDoneActive(true);\n  }\n\n  return (\n    <S.Page>\n      <S.BurgerWrapper\n        onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n        id=\"burger_menu\"\n      >\n        <FontAwesomeIcon icon={faBars} size=\"xl\" />\n      </S.BurgerWrapper>\n      {!isTablet && <SideBar />}\n      {isSidebarOpen && (\n        <S.Backdrop onClick={toggleSidebar} id=\"backdrop\">\n          <SideBar />\n        </S.Backdrop>\n      )}\n      <S.Main>\n        <S.Header>All your tasks</S.Header>\n        <S.TitleAndFilter>\n          <S.Title onClick={handleDone}>Tasks </S.Title>\n          <S.FilterField>\n            <div onClick={handleAll}>\n              <FilterTag name=\"All\" active={allActive} />\n            </div>\n            <div onClick={handleDone}>\n              <FilterTag name=\"Done\" active={doneActive} />\n            </div>\n            <div onClick={handleNotDone}>\n              <FilterTag name=\"Not done\" active={notDoneActive} />\n            </div>\n            <S.FilterIcon src={Filter} />\n          </S.FilterField>\n        </S.TitleAndFilter>\n        {listOfLists[listToDisplay].map((task) => (\n          <TaskCard\n            key={task.id}\n            id={task.id}\n            name={task.title}\n            list={task.categorie}\n            color={task.color}\n            done={task.done}\n            date={task.date}\n          />\n        ))}\n        <AddTask></AddTask>\n      </S.Main>\n      {showEdit && <EditModal />}\n      {showDelete && <DeleteModal />}\n      {showAdd && <AddModal />}\n    </S.Page>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","useContext","TaskListContext","taskList","doneTasks","notDoneTasks","_ref2","AuthContext","categList","userData","isLoading","CategoriesContext","navigate","useNavigate","_ref4","DeleteContext","showDelete","showEdit","showAdd","AddContext","_useState","useState","_useState2","_slicedToArray","listToDisplay","setListToDisplay","listOfLists","_useState3","_useState4","allActive","setAllActive","_useState5","_useState6","doneActive","setDoneActive","_useState7","_useState8","notDoneActive","setNotDoneActive","_useState9","_useState10","isSidebarOpen","setIsSidebarOpen","useEffect","_categList$","nameNav","name","isTablet","useMediaQuery","minWidth","maxWidth","handleDone","_jsxs","S","children","_jsx","onClick","id","FontAwesomeIcon","icon","faBars","size","SideBar","e","target","FilterTag","active","src","Filter","map","task","TaskCard","title","list","categorie","color","done","date","AddTask","EditModal","DeleteModal","AddModal"],"sourceRoot":""}