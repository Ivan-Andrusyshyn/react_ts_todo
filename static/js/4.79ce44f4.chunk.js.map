{"version":3,"file":"static/js/4.79ce44f4.chunk.js","mappings":"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","sources":["Pages/Categorie/styles.ts","i18n/LanguageSelector/styles.ts","i18n/LanguageSelector/index.tsx","Pages/Categorie/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  backdrop-filter: blur(4px);\r\n`;\r\nexport const BurgerWrapper = styled.div`\r\n  position: fixed;\r\n  left: 50px;\r\n  top: 30px;\r\n  cursor: pointer;\r\n`;\r\nexport const Page = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex: row;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nexport const Sidebar = styled.div`\r\n  height: 100vh;\r\n  width: 18vw;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 0;\r\n  box-sizing: border-box;\r\n`;\r\nexport const Img = styled.img`\r\n  width: 50px;\r\n  margin: 32px;\r\n`;\r\n\r\nexport const Tabs = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 60vh;\r\n`;\r\nexport const Main = styled.div`\r\n  height: 100vh;\r\n  width: 82vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: start;\r\n  overflow-y: scroll;\r\n  @media screen and (min-width: 820px) {\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 400;\r\n  color: #555;\r\n  margin: 16px;\r\n`;\r\n\r\nexport const TitleAndFilter = styled.div`\r\n  height: 20px;\r\n  width: 70vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: 24px;\r\n  color: #555;\r\n`;\r\n\r\nexport const FilterField = styled.div`\r\n  height: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterIcon = styled.img`\r\n  height: 20px;\r\n  margin: 0 8px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\ninterface propSelect {\r\n  selected: boolean;\r\n}\r\nexport const BtnWraper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 60px;\r\n`;\r\nexport const LanguageButton = styled.button<propSelect>`\r\n  width: 50px;\r\n  height: 30px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  border: ${(props) => !props.selected && \"1px solid #bdbdbd\"};\r\n`;\r\nexport const imgBtn = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as S from \"./styles\";\r\n\r\nfunction LanguageSelector() {\r\n  const { i18n } = useTranslation();\r\n  const [selected, setSelected] = useState<string>(\"en\");\r\n  const changeLanguage = (language: string) => {\r\n    i18n.changeLanguage(language);\r\n  };\r\n  const handleSelectLng = (lg: string) => {\r\n    console.log(lg);\r\n\r\n    changeLanguage(lg);\r\n    setSelected(lg);\r\n  };\r\n\r\n  return (\r\n    <S.BtnWraper>\r\n      <S.LanguageButton\r\n        onClick={() => handleSelectLng(\"en\")}\r\n        selected={selected === \"en\"}\r\n      >\r\n        <S.imgBtn\r\n          src=\"https://tse1.mm.bing.net/th?id=OIP.lcElUjxX_dDwCNCb3KkG9QHaEo&pid=Api&P=0&h=180\"\r\n          alt=\"Eng\"\r\n        />\r\n      </S.LanguageButton>\r\n      <S.LanguageButton\r\n        onClick={() => handleSelectLng(\"ukr\")}\r\n        selected={selected === \"ukr\"}\r\n      >\r\n        <S.imgBtn\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Flag_of_Ukraine.svg/1200px-Flag_of_Ukraine.svg.png\"\r\n          alt=\"Urk\"\r\n        />\r\n      </S.LanguageButton>\r\n    </S.BtnWraper>\r\n  );\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport * as S from \"./styles\";\r\nimport TaskCard from \"../../Components/TaskCard\";\r\nimport AddTask from \"../../Components/AddTask\";\r\nimport { TaskListContext } from \"../../Contexts/taskListContext\";\r\nimport { TaskListType } from \"../../Contexts/typesContext/taskType\";\r\nimport FilterTag from \"../../Components/FilterTag\";\r\nimport Filter from \"../../Img/filter.svg\";\r\nimport { DeleteContext } from \"../../Contexts/delete_edit_Context\";\r\nimport { DeleteType } from \"../../Contexts/typesContext/delete_edit_Type\";\r\nimport DeleteModal from \"../../Components/DeleteModal\";\r\nimport AddModal from \"../../Components/AddModal\";\r\nimport { AddContext } from \"../../Contexts/addContext\";\r\nimport { AddType } from \"../../Contexts/typesContext/addType\";\r\nimport SideBar from \"../Home/SideBar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport EditModal from \"../../Components/EditModal/EditModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport LanguageSelector from \"../../i18n/LanguageSelector\";\r\n\r\nconst CategoriePage: React.FC = () => {\r\n  const { name } = useParams<string>();\r\n  const { t } = useTranslation();\r\n\r\n  const { taskList, doneTasks, notDoneTasks } = useContext(\r\n    TaskListContext\r\n  ) as TaskListType;\r\n  const { showDelete, showEdit } = useContext(DeleteContext) as DeleteType;\r\n  const { showAdd } = useContext(AddContext) as AddType;\r\n  const [listToDisplay, setListToDisplay] = useState(0);\r\n  const listOfLists = [\r\n    taskList.filter((task) => task.categorie === name),\r\n    doneTasks.filter((task) => task.categorie === name),\r\n    notDoneTasks.filter((task) => task.categorie === name),\r\n  ];\r\n\r\n  const [allActive, setAllActive] = useState(true);\r\n  const [doneActive, setDoneActive] = useState(false);\r\n  const [notDoneActive, setNotDoneActive] = useState(false);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  const isTablet = useMediaQuery({ minWidth: 320, maxWidth: 920 });\r\n\r\n  function handleAll() {\r\n    setListToDisplay(0);\r\n    setAllActive(true);\r\n    setDoneActive(false);\r\n    setNotDoneActive(false);\r\n  }\r\n\r\n  function handleDone() {\r\n    setListToDisplay(1);\r\n    setAllActive(false);\r\n    setDoneActive(true);\r\n    setNotDoneActive(false);\r\n  }\r\n  function handleNotDone() {\r\n    setListToDisplay(2);\r\n    setAllActive(false);\r\n    setDoneActive(false);\r\n    setNotDoneActive(true);\r\n  }\r\n  const toggleSidebar = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    const clickedElement = e.target as HTMLElement;\r\n    if (clickedElement.id === \"backdrop\") {\r\n      setIsSidebarOpen(!isSidebarOpen);\r\n    }\r\n  };\r\n  return (\r\n    <S.Page>\r\n      <S.BurgerWrapper\r\n        onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        id=\"burger_menu\"\r\n      >\r\n        <FontAwesomeIcon icon={faBars} size=\"xl\" />\r\n      </S.BurgerWrapper>\r\n      {!isTablet && <SideBar />}\r\n      {isSidebarOpen && (\r\n        <S.Backdrop onClick={toggleSidebar} id=\"backdrop\">\r\n          <SideBar />\r\n        </S.Backdrop>\r\n      )}\r\n      <S.Main>\r\n        <LanguageSelector />\r\n        <S.Header>{name}</S.Header>\r\n        <S.TitleAndFilter>\r\n          <S.Title onClick={handleDone}>{t(\"upBar\")}</S.Title>\r\n          <S.FilterField>\r\n            <div onClick={handleAll}>\r\n              <FilterTag name={t(\"filterAll\")} active={allActive} />\r\n            </div>\r\n            <div onClick={handleDone}>\r\n              <FilterTag name={t(\"filterDn\")} active={doneActive} />\r\n            </div>\r\n            <div onClick={handleNotDone}>\r\n              <FilterTag name={t(\"filterNDone\")} active={notDoneActive} />\r\n            </div>\r\n            <S.FilterIcon src={Filter} />\r\n          </S.FilterField>\r\n        </S.TitleAndFilter>\r\n        {listOfLists[listToDisplay].map((task) => (\r\n          <TaskCard\r\n            key={task.id}\r\n            id={task.id}\r\n            name={task.title}\r\n            list={task.categorie}\r\n            color={task.color}\r\n            done={task.done}\r\n            date={task.date}\r\n          />\r\n        ))}\r\n        <AddTask></AddTask>\r\n      </S.Main>\r\n      {showEdit && <EditModal />}\r\n      {showDelete && <DeleteModal />}\r\n      {showAdd && <AddModal />}\r\n    </S.Page>\r\n  );\r\n};\r\n\r\nexport default CategoriePage;\r\n"],"names":["Backdrop","styled","div","_templateObject","_taggedTemplateLiteral","BurgerWrapper","_templateObject2","Page","_templateObject3","Main","_templateObject4","img","_templateObject5","_templateObject6","_templateObject7","Header","h1","_templateObject8","TitleAndFilter","_templateObject9","Title","h3","_templateObject10","FilterField","_templateObject11","FilterIcon","_templateObject12","BtnWraper","LanguageButton","button","props","selected","imgBtn","i18n","useTranslation","_useState","useState","_useState2","_slicedToArray","setSelected","handleSelectLng","lg","language","console","log","changeLanguage","_jsxs","S","children","_jsx","onClick","src","alt","name","useParams","t","_ref","useContext","TaskListContext","taskList","doneTasks","notDoneTasks","_ref2","DeleteContext","showDelete","showEdit","showAdd","AddContext","listToDisplay","setListToDisplay","listOfLists","filter","task","categorie","_useState3","_useState4","allActive","setAllActive","_useState5","_useState6","doneActive","setDoneActive","_useState7","_useState8","notDoneActive","setNotDoneActive","_useState9","_useState10","isSidebarOpen","setIsSidebarOpen","isTablet","useMediaQuery","minWidth","maxWidth","handleDone","id","FontAwesomeIcon","icon","faBars","size","SideBar","e","target","LanguageSelector","FilterTag","active","Filter","map","TaskCard","title","list","color","done","date","AddTask","EditModal","DeleteModal","AddModal"],"sourceRoot":""}