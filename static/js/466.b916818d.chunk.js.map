{"version":3,"file":"static/js/466.b916818d.chunk.js","mappings":"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","sources":["Components/AuthLoader/AuthLoader.tsx","Components/ErrorComponent/styles.ts","Components/ErrorComponent/index.tsx","Pages/AnimationsPages/toBottom/index.tsx","Pages/AnimationsPages/toTop/index.tsx","Pages/SignUp/styles.ts","Pages/SignUp/index.tsx"],"sourcesContent":["import { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\ninterface propLoader {\r\n  isLoading: boolean;\r\n  loaderColor: string;\r\n}\r\nconst LoaderInButton: React.FC<propLoader> = ({ isLoading, loaderColor }) => (\r\n  <>\r\n    {isLoading && (\r\n      <FontAwesomeIcon\r\n        icon={faSpinner}\r\n        size=\"sm\"\r\n        color={loaderColor}\r\n        style={{ marginLeft: 10 }}\r\n        className=\"fa-spin-pulse fa-spin-reverse\"\r\n      />\r\n    )}\r\n  </>\r\n);\r\nexport default LoaderInButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorMessage = styled.div`\r\n  @keyframes fadeIn {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  padding: 4px;\r\n  max-width: 280px;\r\n  border: 2px solid darkred;\r\n  border-radius: 6px;\r\n  letter-spacing: 0.1em;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  animation: fadeIn 0.5s ease-in-out;\r\n`;\r\n","import * as S from \"./styles\";\r\nconst ErrorMessageAuth: React.FC<{ isError: string | null }> = ({\r\n  isError,\r\n}) => {\r\n  return <S.ErrorMessage>{isError}</S.ErrorMessage>;\r\n};\r\n\r\nexport default ErrorMessageAuth;\r\n","import { useSpring, animated } from \"react-spring\";\r\nimport { AnimatedContainerProps } from \"../types/types\";\r\n\r\nconst AnimatedContainerBottom: React.FC<AnimatedContainerProps> = ({\r\n  children,\r\n}) => {\r\n  const animationProps = useSpring({\r\n    from: { opacity: 0, transform: \"translateY(-100px)\" },\r\n    to: { opacity: 1, transform: \"translateY(0)\" },\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  return <animated.div style={animationProps}>{children}</animated.div>;\r\n};\r\nexport default AnimatedContainerBottom;\r\n","import { useSpring, animated } from \"react-spring\";\r\nimport { AnimatedContainerProps } from \"../types/types\";\r\n\r\nconst AnimatedContainerTop: React.FC<AnimatedContainerProps> = ({\r\n  children,\r\n}) => {\r\n  const animationProps = useSpring({\r\n    from: { opacity: 0, transform: \"translateY(100px)\" },\r\n    to: { opacity: 1, transform: \"translateY(0)\" },\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  return <animated.div style={animationProps}>{children}</animated.div>;\r\n};\r\nexport default AnimatedContainerTop;\r\n","import styled, { css } from \"styled-components\";\r\ninterface propsInputAuth {\r\n  error: string;\r\n}\r\nexport const Img = styled.img`\r\n  width: 30vw;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex: row;\r\n`;\r\n\r\nexport const LeftSide = styled.div`\r\n  width: 50vw;\r\n  height: 100vh;\r\n  background-color: #eee;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const RightSide = styled.div`\r\n  width: 50vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: left;\r\n  padding-left: 12.5vw;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #333;\r\n  font-family: Roboto, Arial;\r\n  font-size: 40px;\r\n  margin: 12px;\r\n  margin-left: 0;\r\n`;\r\nexport const Subtitle = styled.h2`\r\n  color: #999;\r\n  font-family: Roboto, Arial;\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  margin: 8px;\r\n  margin-left: 0;\r\n  margin-right: 16px;\r\n\r\n  a {\r\n    color: #7f56da;\r\n    font-weight: bold;\r\n\r\n    &:hover {\r\n      color: #613db7;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldName = styled.h2`\r\n  color: #777;\r\n  font-family: Roboto, Arial;\r\n  font-size: 16px;\r\n  margin: 8px;\r\n  margin-left: 0;\r\n`;\r\n\r\nexport const InputField = styled.input<propsInputAuth>`\r\n  width: 25vw;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  border: 1px solid #999;\r\n  padding-left: 8px;\r\n  font-size: 16px;\r\n  color: #777;\r\n  box-sizing: border-box;\r\n  &::placeholder {\r\n    color: #bbb;\r\n  }\r\n  &::placeholder {\r\n    ${(props) =>\r\n      props.error &&\r\n      css`\r\n        color: red;\r\n      `};\r\n  }\r\n  ${(props) =>\r\n    props.error &&\r\n    css`\r\n      border: 1px solid red;\r\n    `};\r\n\r\n  &:focus {\r\n    border: 1px solid #999;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const SignIn = styled.button`\r\n  width: 25vw;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background: #7f56da;\r\n  color: white;\r\n  font-size: 16px;\r\n  border: 0px;\r\n  font-weight: 400;\r\n  gap: 10px;\r\n  margin: 16px 0px;\r\n\r\n  &:hover {\r\n    background: #613db7;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Checkbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 1px solid #333;\r\n  margin-right: 8px;\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\nexport const KeepSigned = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n`;\r\nexport const Google_Btn = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  background-color: transparent;\r\n  text-decoration: underline;\r\n  color: rgb(153, 153, 153);\r\n  font-family: Arial;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  transition: color 0.25s linear;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #613db7;\r\n  }\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../Contexts/authContext\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Logo from \"../../Img/Logo.png\";\r\nimport * as S from \"./styles\";\r\nimport LoaderInButton from \"../../Components/AuthLoader/AuthLoader\";\r\nimport { AuthType } from \"../../Contexts/typesContext/authType\";\r\nimport ErrorMessageAuth from \"../../Components/ErrorComponent\";\r\nimport { motion } from \"framer-motion\";\r\nimport AnimatedContainerBottom from \"../AnimationsPages/toBottom\";\r\nimport AnimatedContainerTop from \"../AnimationsPages/toTop\";\r\n\r\nconst SignUp = () => {\r\n  const {\r\n    registration,\r\n    signInWithGoogle,\r\n    isLoading,\r\n    isLoadingGoogle,\r\n    isError,\r\n  } = useContext(AuthContext) as AuthType;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    const newTimeOut = setTimeout(() => {\r\n      setError(\"\");\r\n    }, 2000);\r\n    return () => {\r\n      clearTimeout(newTimeOut);\r\n    };\r\n  }, [error]);\r\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSignUpClick = (e: React.MouseEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !password) {\r\n      setError(\"Please enter\");\r\n      return;\r\n    }\r\n    registration(email, password, name);\r\n  };\r\n\r\n  return (\r\n    <S.Page>\r\n      <AnimatedContainerBottom>\r\n        <S.LeftSide>\r\n          <S.Img src={Logo}></S.Img>\r\n        </S.LeftSide>\r\n      </AnimatedContainerBottom>\r\n\r\n      <AnimatedContainerTop>\r\n        <S.RightSide>\r\n          <S.Title>Welcome to Tasker</S.Title>\r\n          <S.Subtitle>\r\n            Please, insert your information to access your tasks.\r\n          </S.Subtitle>\r\n          <form action=\"\" onSubmit={handleSignUpClick}>\r\n            <S.FieldName>Name</S.FieldName>\r\n            <S.InputField\r\n              value={name}\r\n              id=\"name\"\r\n              error={error}\r\n              onChange={handleNameChange}\r\n              placeholder={error ? `${error} name.` : \"Create your name\"}\r\n            ></S.InputField>\r\n            <S.FieldName>Email</S.FieldName>\r\n            <S.InputField\r\n              value={email}\r\n              id=\"email\"\r\n              error={error}\r\n              autoComplete=\"username\"\r\n              onChange={handleEmailChange}\r\n              placeholder={error ? `${error} email.` : \"Insert your email\"}\r\n            ></S.InputField>\r\n            <S.FieldName>Password</S.FieldName>\r\n            <S.InputField\r\n              value={password}\r\n              id=\"password\"\r\n              error={error}\r\n              autoComplete=\"current-password\"\r\n              onChange={handlePasswordChange}\r\n              placeholder={\r\n                error ? `${error} password.` : \"Insert your password\"\r\n              }\r\n              type=\"password\"\r\n            ></S.InputField>\r\n            <S.KeepSigned>\r\n              <S.Checkbox />\r\n              <S.Subtitle>Remember me</S.Subtitle>\r\n            </S.KeepSigned>\r\n            {isError && <ErrorMessageAuth isError={isError} />}\r\n            <S.SignIn type=\"submit\" disabled={isLoading}>\r\n              Sign Up\r\n              <LoaderInButton loaderColor={\"#fff\"} isLoading={isLoading} />\r\n            </S.SignIn>\r\n          </form>\r\n          <S.Subtitle>\r\n            Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            <br />\r\n            <S.Google_Btn onClick={signInWithGoogle}>\r\n              {isLoadingGoogle ? (\r\n                <LoaderInButton\r\n                  loaderColor={\"#000\"}\r\n                  isLoading={isLoadingGoogle}\r\n                />\r\n              ) : (\r\n                \"Sign Up with Google\"\r\n              )}\r\n            </S.Google_Btn>\r\n          </S.Subtitle>\r\n        </S.RightSide>\r\n      </AnimatedContainerTop>\r\n    </S.Page>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["_ref","isLoading","loaderColor","_jsx","_Fragment","children","FontAwesomeIcon","icon","faSpinner","size","color","style","marginLeft","className","ErrorMessage","styled","div","_templateObject","_taggedTemplateLiteral","isError","S","animationProps","useSpring","from","opacity","transform","to","config","duration","animated","Img","img","Page","_templateObject2","LeftSide","_templateObject3","RightSide","_templateObject4","Title","h1","_templateObject5","Subtitle","h2","_templateObject6","FieldName","_templateObject7","InputField","input","_templateObject8","props","error","css","_templateObject9","_templateObject10","SignIn","button","_templateObject11","Checkbox","attrs","type","_templateObject12","KeepSigned","_templateObject13","Google_Btn","_templateObject14","useContext","AuthContext","registration","signInWithGoogle","isLoadingGoogle","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","setError","useEffect","newTimeOut","setTimeout","clearTimeout","_jsxs","AnimatedContainerBottom","src","Logo","AnimatedContainerTop","action","onSubmit","e","preventDefault","value","id","onChange","event","target","placeholder","concat","autoComplete","ErrorMessageAuth","disabled","LoaderInButton","Link","onClick"],"sourceRoot":""}